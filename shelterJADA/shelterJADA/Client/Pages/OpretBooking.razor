@page "/"
@using shelterJADA.Shared
@inject HttpClient Http

<h1>Opret en booking!</h1>

@*BOOTSTRAP!*@





<div class="row">
    <div class="shelterTabel col-md-7">
        <table class="table table-striped table-sm">
            <thead>
                @if (KommuneSheltere != null)
                {
                <tr class="table-dark">
                    <th>Shelter</th>
                    <th>Antal Pladser</th>
                    <th>Beskrivelse</th>
                </tr>
                }
            </thead>
            <tbody>
                @if (KommuneSheltere != null)
                {
                    @foreach (var item in KommuneSheltere)
                    {
                    <tr>
                        <td>
                            <div class="form-check">
                                <input class="form-check-input" type="radio" id="shelterKnap" @onchange="vælgShelter" value=@item.Id name="radAnswer" >
                                    <label class="form-check-label" for="shelterknap"> 
                                    @item.Properties.Navn
                                </label>
                            </div>
                        </td>
                        <td>@item.Properties.Antal_pl</td>
                        <td>@item.Properties.Beskrivels</td>
                    </tr>               
                    }
                }
            </tbody>
        </table>
    </div>

    <div class="brugerInput col-md-5">
        <div class="form-floating mb-3">
    <select  @onchange="vælgKommune" class="form-select" id="floatingSelect">
    <option selected>Liste over kommuner</option>
    @foreach (var item in AntalKommuner)
    {
        <option value=@item>@item</option>
    }
    </select>
    <label for="floatingSelect">Shelters i</label>
</div>
        <div>
            <div class="form-floating mb-3">
                <input type="text" class="form-control" id="floatingFornavn" @bind="fornavn" aria-label="First name">
                <label for="floatingFornavn">Fornavn</label>
            </div>
            <div class="form-floating mb-3">
                <input type="text" class="form-control" id="floatingEfternavn" @bind="efternavn" aria-label="Last name">
                <label for="floatingEfternavn">Efternavn</label>
            </div>
        </div>


        <div>
            <div class="form-floating mb-3">
              <input type="email" class="form-control" id="floatingInput" @bind="email">
              <label for="floatingInput">Email</label>
            </div>
        </div>

        <div>
            <div class="form-floating mb-3">
              <input type="tel" class="form-control" id="floatingTelefon" @bind="telefon">
              <label for="floatingTelefon">Telefon</label>
            </div>
        </div>

        <div class="row g-2">
            <div class="col-md">
                <div class="form-floating mb-3">
                  <input type="date" class="form-control" id="floatingStart" @bind="start_dato">
                  <label for="floatingStart">Start dato</label>
                </div>
            </div>
            <div class="col-md">
                <div class="form-floating mb-3">
                  <input type="date" class="form-control" id="floatingSlut" @bind="slut_dato">
                  <label for="floatingSlut">Slut dato</label>
                </div>
            </div>
        </div>

        <input class="btn btn-success" type="submit" @onclick="SendData" value="Book Shelter" />
    </div>
</div>

@code {
    private string fornavn, efternavn, email, telefon, valgtKommune;

    private DateTime start_dato = DateTime.Now;
    private DateTime slut_dato = DateTime.Now.AddDays(1);

    public Shelter valgteShelter = new Shelter();
    public List<Shelter> ShelterListe;
    public List<string> AntalKommuner = new List<string>();
    public List<Shelter> KommuneSheltere;

    protected override async Task OnInitializedAsync()
    {
        AntalKommuner = await Http.GetFromJsonAsync<List<string>>("ShelterDB/distinctkommune");

    }
    
    //Finder sheltere baseret på valgte kommune
    public async Task vælgKommune(ChangeEventArgs e)
    {
        valgtKommune = e.Value.ToString();

        Console.WriteLine(valgtKommune);

        await GetKommuneSheltere(valgtKommune);
    } 

    //Get-funktion til at hente sheltere i controlleren
    protected async Task<List<Shelter>> GetKommuneSheltere(string kommunenavn)
    {
        return KommuneSheltere = await Http.GetFromJsonAsync<List<Shelter>>("ShelterDB/kommune?kommunenavn="+kommunenavn);

    }



      //Finder shelter ID og navn baseret på valgte shelter
    public async Task vælgShelter(ChangeEventArgs e)
    {
        var shelterId = e.Value.ToString();

        Console.WriteLine(shelterId);

        await GetShelterIdNavn(shelterId);
    } 

    //Get-funktion til at hente shelterID og navn i controlleren
    protected async Task<Shelter> GetShelterIdNavn(string shelterId)
    {
        return valgteShelter = await Http.GetFromJsonAsync<Shelter>("ShelterDB/idnavn?shelterId="+shelterId);

    }



    //Post-funktion til at oprette en booking
    protected async Task SendData()
    {
        Booking nyBooking = new Booking();
        Bruger nyBruger = new Bruger();
        Udlejet_Shelter nyUdlejet_Shelter = new Udlejet_Shelter();

        nyBruger.fornavn = fornavn;
        nyBruger.efternavn = efternavn;
        nyBruger.email = email;
        nyBruger.telefon = telefon;

        nyBooking.slut_dato = slut_dato.AddDays(1);
        nyBooking.start_dato = start_dato.AddDays(1);

        nyUdlejet_Shelter.shelter_id = valgteShelter.Id.ToString();
        nyUdlejet_Shelter.shelter_navn = valgteShelter.Properties.Navn.ToString();

        nyBooking.bruger = nyBruger;
        nyBooking.udlejet_shelter = nyUdlejet_Shelter;



        await Http.PostAsJsonAsync<Booking>("BookingsDB/opret", nyBooking);
    }
}
